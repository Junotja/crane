#!/usr/bin/env python

import re
import os
import sys
import argparse
import subprocess
import numpy

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description = "Run sysbench")
    parser.add_argument("-p", default = 1, type = int,
                        help = "# of threads")
    parser.add_argument("-n", default = 10000, type = int,
                        help = "# of requests")
    parser.add_argument("-r", default = 1, type = int,
                        help = "# of runs")
    args = parser.parse_args()

    cmd = "LD_LIBRARY_PATH=" + os.getcwd() + "/mysql-install/lib/mysql/"
    cmd += " sysbench-install/bin/sysbench"
    cmd += " --mysql-user=root"
    cmd += " --num-threads=" + str(args.p)
    cmd += " --max-requests=" + str(args.n)
    cmd += " --test=oltp"
    cmd += " --oltp-table-size=20000"
    cmd += " --mysql-socket=/tmp/mysql.sock"
    cmd += " --oltp-table-name=sbtest"
    cmd += " --mysql-db=sysbench_db"
    cmd += " run"

    results = []
    for i in range(args.r):
        print >> sys.stderr, "Run", i
        output = subprocess.check_output(cmd, shell = True)
        for line in output.splitlines():
            what = re.search("transactions:.+\\(([\\d+\\.]+) per sec\\.\\)",
                             line)
            if what is not None:
                result = float(what.group(1))
                results.append(result)
                print >> sys.stderr, "# of transactions per sec =", result
    assert len(results) == args.r

    print results
    print "mean =", numpy.mean(results)
    print "stdev =", numpy.std(results)
    print "min =", numpy.min(results)
    print "max =", numpy.max(results)
